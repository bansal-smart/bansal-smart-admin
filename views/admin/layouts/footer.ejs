
<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
    <link rel="stylesheet" href="https://ekamyog.in/public/admin/css/snackbar.css" />

<!-- Snackbar JS -->
<script src="https://ekamyog.in/public/admin/js/snackbar.js" charset="utf-8"></script>
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="<%= base_url %>demo/global.min.js" type="text/javascript"></script>
<script src="<%= base_url %>demo/bootstrap-select.min.js" type="text/javascript"></script>
<script src="<%= base_url %>demo/jquery.dataTables.min.js" type="text/javascript"></script>
<script src="<%= base_url %>demo/datatables.init.js" type="text/javascript"></script>
<script src="<%= base_url %>demo/custom.min.js" type="text/javascript"></script>
<script src="<%= base_url %>demo/deznav-init.js" type="text/javascript"></script>
<script src="<%= base_url %>demo/demo.js" type="text/javascript"></script>
<script src="<%= base_url %>demo/styleSwitcher.js" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>
<script>
  
  const editors = [];
  document.addEventListener('DOMContentLoaded', function () {
    const editorEls = document.querySelectorAll('.ckeditor');
    if (!editorEls.length) {
      console.warn('No editors found');
      return;
    }
    editorEls.forEach((el, i) => {
      ClassicEditor.create(el).then(editor => {
        editors[i] = editor;
      }).catch(error => {
        console.error('CKEditor error:', error);
      });
    });
  });

  function submitForm(e) {
    if (!editors.length) {
      alert('Editor not ready');
      e.preventDefault();
      return false;
    }
    editors.forEach((editor, i) => {
      document.querySelectorAll('.ckeditor')[i].value = editor.getData();
    });
    // allow form submission
    return true;
  }
</script>

<!-- Custom JS functions -->
<script>
  // Convert input text to slug format
  function convertToSlug(TextObj) {
    $("#slug").val(
      TextObj.value
        .toLowerCase()
        .replace(/[^\w ]+/g, '')
        .replace(/ +/g, '-')
    );
  }

  // Back button functionality
  $(document).ready(function () {
    $('#backButton').click(function () {
      window.history.back();
    });
  });

  // Snackbar success message
  // function successMsg(heading, message, html = "") {
  //   Snackbar.show({
  //     text: message,
  //     backgroundColor: '#232323',
  //     width: '475px',
  //     pos: 'bottom-center'
  //   });
  // }

  // // Snackbar error message
  // function errorMsg(heading, message) {
  //   Snackbar.show({
  //     text: message,
  //     backgroundColor: '#232323',
  //     width: '475px',
  //     pos: 'bottom-center'
  //   });
  // }
</script>



<script>
  function successMsg(heading, message, html = "") {
    Snackbar.show({
      text: message,
      backgroundColor: '#232323',
      width: '475px',
      pos: 'bottom-center'
    });
  }

  function errorMsg(heading, message) {
    Snackbar.show({
      text: message,
      backgroundColor: '#cc0000',
      width: '475px',
      pos: 'bottom-center'
    });
  }

  function readURL(input, imgElementId) {
    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#' + imgElementId).attr('src', e.target.result);
        };

        reader.readAsDataURL(input.files[0]);
    }
}
function readURL(input) {
  if (input.files && input.files[0]) {
    const reader = new FileReader();

    reader.onload = function (e) {
      // Find the nearest .preview image relative to the input
      $(input).closest('.form-group').find('img').attr('src', e.target.result);
    };

    reader.readAsDataURL(input.files[0]);
  }
}
</script>


<script>

  


 $(document).ready(function () {
    $('form').submit(function (e) {
        e.preventDefault();

        var $form = $(this);
        var $btn = $form.find('[type="submit"]');

        buttonLoading('loading', $btn);
        $form.find('.is-invalid').removeClass('is-invalid state-invalid');
        $form.find('.invalid-feedback').remove();
        const url = $form.attr('action');
        console.log(url);
        $.ajax({
            url: url,
            type: "POST",
            data: new FormData(this),
            processData: false,
            contentType: false,
            cache: false,
            success: function (data) {
            console.log("Data is");
                if (data.success) {
                    
                    successMsg('', data.message);
                    setTimeout(function () {
                        window.location = data.redirect_url;
                    }, 1000);
                } else {
                    $.each(data.errors, function (fieldName, messages) {
                        var $field = $form.find('[name="' + fieldName + '"]');
                        $field.addClass('is-invalid state-invalid');
                        $field.parent().append('<div class="invalid-feedback">' + messages[0] + '</div>');
                    });
                    errorMsg('', data.message);
                }
                buttonLoading('reset', $btn);
            },
          error: function (xhr) {
      console.log("XHR Error:", xhr); // <-- Add this for debugging

    if (xhr.status === 422) {
        $.each(xhr.responseJSON.errors, function (fieldName, messages) {
            var $field = $form.find('[name="' + fieldName + '"]');
            $field.addClass('is-invalid state-invalid');
            $field.parent().append('<div class="invalid-feedback">' + messages[0] + '</div>');
        });
        errorMsg('', xhr.responseJSON.message);
    } else {
        // Show full error for unexpected cases
        console.error('Unexpected Error Response:', xhr.responseText);
        errorMsg('', 'Unexpected error occurred');
    }

    buttonLoading('reset', $btn);
}
        });
    });
});


// Snackbar function to display messages
// function showSnackbar(message, type) {
//     Snackbar.show({
//         text: message,
//         actionText: 'Dismissddd',
//         backgroundColor: type === 'success' ? '#4CAF50' : '#f44336', // Green for success, red for error
//         duration: 3000 // Duration in ms
//     });
// }

// Button loading state handling
function buttonLoading(state, $btn) {
    if (state === 'loading') {
        $btn.prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> Please wait...');
    } else {
        $btn.prop('disabled', false).html('Update');
    }
}

 function isCharKey(evt){
                var charCode = (evt.which) ? evt.which : evt.keyCode
                if (charCode > 32 && (charCode < 97 || charCode > 122) && (charCode < 65 || charCode > 90))
                return false;
                return true;
            }
            
            function isNumberKey(evt){
            
            var charCode = (evt.which) ? evt.which : evt.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
            return true;
            }

// Success message handling
// function successMsg(title, message, btn = '') {
//     Swal.fire({
//         icon: 'success',
//         title: title,
//         html: message + '<br>' + btn,
//         timer: 3000
//     });
// }

// // Error message handling
// function errorMsg(title, message) {
//     Swal.fire({
//         icon: 'error',
//         title: title,
//         text: message
//     });
// }
</script>
<!-- Footer -->
<div class="footer">
  <div class="copyright">
    <p>
      Copyright Â© Designed &amp; Developed by
      <a href="" target="_blank">Bansal Smart</a> 2025
    </p>
  </div>
</div>

</div>

</body>
</html>