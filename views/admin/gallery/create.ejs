<%- include('../layouts/header') %>

<section class="content-body">
  <div class="container-fluid">
    <div class="row">
      <div class="col-12">
        <div class="card">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h4 class="card-title mb-0"><%= title %> <%= page_name %></h4>
            <button type="button" id="backButton" class="btn btn-primary btn-sm">
              <i class="fa fa-arrow-left"></i> Back
            </button>
          </div>
          <div class="card-body">

            <form id="submitForm" class="forms-sample"
              action="<%= form_url %>"
              method="post"
              enctype="multipart/form-data">

              <div class="row">

      <% if (userRole === "super admin") { %>
  <div class="form-group col-sm-7">
    <label for="center">Select Center</label>
    <select name="center_id" id="center" class="form-control">
      <option value="">-- Select Center --</option>
      <% if (centers && centers.length) { %>
        <% centers.forEach(function(center) { %>
          <option value="<%= center.id %>"><%= center.name %></option>
        <% }); %>
      <% } else { %>
        <option value="">No centers found</option>
      <% } %>
    </select>
  </div>
<% } %>
                <div class="form-group col-sm-7">
                  <label class="form-label">Title *</label>
                  <input type="text" class="form-control" name="title" id="title"
                    placeholder="Gallery Title"
                    value="<%= post?.title || '' %>">
                </div>
                <div class="form-group col-sm-7">
  <label class="form-label">Gallery (Images/Videos)</label>

  <div id="dropZone"
       style="border: 2px dashed #ccc; padding: 20px; text-align: center; cursor: pointer;">
    <p>Drag & Drop files here or click to select</p>
    <input type="file" name="gallery" id="galleryInput" accept="image/*,video/*" multiple hidden>
  </div>

  <div id="previewArea" class="mt-3 d-flex flex-wrap gap-3"></div>

  <% if (post?.gallery && Array.isArray(post.gallery)) { %>
    <div id="existingFiles" class="mt-3 d-flex flex-wrap gap-3">
      <% post.gallery.forEach((file, index) => {
          const ext = file.split('.').pop().toLowerCase();
          const isVideo = ['mp4', 'webm', 'ogg'].includes(ext); %>

        <div class="position-relative">
          <% if (isVideo) { %>
            <video width="100" controls>
              <source src="<%= publicUrl + file %>" type="video/<%= ext %>">
            </video>
          <% } else { %>
            <img src="<%= publicUrl + file %>" width="100">
          <% } %>
          <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0 remove-existing"
                  data-index="<%= index %>">&times;</button>
          <input type="hidden" name="existing_gallery[]" value="<%= file %>">
        </div>

      <% }); %>
    </div>
  <% } %>
</div>
                <!-- <div class="form-group col-sm-6">
  <label class="form-label">Gallery (Images/Videos)</label>
  <input type="file" class="form-control" name="gallery" id="gallery" accept="image/*,video/*" multiple>

  <div id="previewArea" class="mt-2 d-flex flex-wrap gap-2"></div>

  <% if (post?.gallery && Array.isArray(post.gallery)) { %>
    <div class="mt-3 d-flex flex-wrap gap-2">
      <% post.gallery.forEach((file, index) => {
          const ext = file.split('.').pop().toLowerCase();
          const isVideo = ['mp4', 'webm', 'ogg'].includes(ext); %>

        <div class="position-relative me-2 mt-2">
          <% if (isVideo) { %>
            <video width="100" controls>
              <source src="<%= publicUrl + file %>" type="video/<%= ext %>">
            </video>
          <% } else { %>
            <img src="<%= publicUrl + file %>" width="100">
          <% } %>

          <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0 remove-existing"
                  data-index="<%= index %>">&times;</button>
          <input type="hidden" name="existing_gallery[]" value="<%= file %>">
        </div>

      <% }); %>
    </div>
  <% } %>
</div> -->

                <!-- Status -->
                <!-- <div class="form-group col-sm-6">
                  <label class="form-label">Status</label>
                  <select name="status" id="status" class="form-control custom-select">
                    <option value="1" <%= post?.status == 1 ? 'selected' : '' %>>Active</option>
                    <option value="0" <%= post?.status == 0 ? 'selected' : '' %>>Inactive</option>
                  </select>
                </div>
              </div> -->


              <!-- Submit Button -->
              <div class="col-md-12 mt-3">
                <button type="submit" id="submitButton" class="btn btn-primary float-right"
                  data-loading-text="<i class='fa fa-spinner fa-spin'></i> Sending..."
                  data-rest-text="<%= post?.id ? 'Create' : 'Create' %>">
                  <%= post?.id ? 'Create' : 'Create' %>
                </button>
              </div>
            </form>

          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  const dropZone = document.getElementById("dropZone");
  const galleryInput = document.getElementById("galleryInput");
  const previewArea = document.getElementById("previewArea");

  // Trigger file select when clicking dropZone
  dropZone.addEventListener("click", () => galleryInput.click());

  // Prevent default drag behaviors
  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    dropZone.addEventListener(eventName, e => e.preventDefault());
  });

  // Highlight on dragover
  dropZone.addEventListener("dragover", () => dropZone.style.borderColor = "#007bff");
  dropZone.addEventListener("dragleave", () => dropZone.style.borderColor = "#ccc");

  // Handle dropped files
  dropZone.addEventListener("drop", e => {
    dropZone.style.borderColor = "#ccc";
    const files = Array.from(e.dataTransfer.files);
    previewFiles(files);
    appendFilesToInput(files);
  });

  // Handle input change (manual select)
  galleryInput.addEventListener("change", e => {
    const files = Array.from(e.target.files);
    previewFiles(files);
  });

  // Store files in FormData-compatible way
  const appendFilesToInput = (files) => {
    const dataTransfer = new DataTransfer();
    [...galleryInput.files, ...files].forEach(file => dataTransfer.items.add(file));
    galleryInput.files = dataTransfer.files;
  };

  // File Preview Function
  function previewFiles(files) {
    files.forEach(file => {
      const reader = new FileReader();
      const ext = file.name.split('.').pop().toLowerCase();

      reader.onload = function (e) {
        const wrapper = document.createElement("div");
        wrapper.className = "position-relative me-2 mt-2";
        wrapper.style.display = "inline-block";

        const removeBtn = document.createElement("button");
        removeBtn.className = "btn btn-sm btn-danger position-absolute top-0 end-0";
        removeBtn.type = "button";
        removeBtn.innerHTML = "&times;";
        removeBtn.onclick = () => {
          wrapper.remove();
          // Also remove from input
          const dt = new DataTransfer();
          Array.from(galleryInput.files).forEach(f => {
            if (f !== file) dt.items.add(f);
          });
          galleryInput.files = dt.files;
        };

        if (['jpg', 'jpeg', 'png', 'gif', 'webp'].includes(ext)) {
          const img = document.createElement("img");
          img.src = e.target.result;
          img.width = 100;
          wrapper.appendChild(img);
        } else if (['mp4', 'webm', 'ogg'].includes(ext)) {
          const video = document.createElement("video");
          video.width = 100;
          video.controls = true;
          const source = document.createElement("source");
          source.src = e.target.result;
          source.type = "video/" + ext;
          video.appendChild(source);
          wrapper.appendChild(video);
        }

        wrapper.appendChild(removeBtn);
        previewArea.appendChild(wrapper);
      };

      reader.readAsDataURL(file);
    });
  }

  // Remove existing files (from server)
  document.querySelectorAll(".remove-existing").forEach(button => {
    button.addEventListener("click", function () {
      const parent = this.closest(".position-relative");
      parent.remove();
    });
  });
</script>



<%- include('../layouts/footer') %>
